name: CreateRelease
on: [push]

jobs:
  Build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-10.15, ubuntu-18.04]
        node-version: [8.x]
    
    name: Build ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1.1.2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install NPM and Meteor
        run: |
          curl https://install.meteor.com/ | sh
          npm install --production
      - name: Build bundle
        run: meteor build --server localhost:8265 --directory ../tdarr-${{ matrix.os }}

      - name: Clean Linux
        if: matrix.os == "ubuntu-18.04"
        run: |
            cd ../tdarr-${{ matrix.os }}/bundle/programs/
            rm -r \
              server/assets/app/HandBrakeCLI.exe \
              server/assets/app/ccextractor/ccextractorwin.exe \
              server/npm/node_modules/ffprobe-static/bin/win32/ \
              server/npm/node_modules/ffprobe-static/bin/darwin/ \
              server/npm/node_modules/nodegit/vendor/plink.exe \
              server/npm/node_modules/nodegit/vendor/pageant.exe

      - name: Clean MacOS
        if: matrix.os == "macos-10.15"
        run: |
            cd ../tdarr-${{ matrix.os }}/bundle/programs/
            rm -r \
              server/assets/app/HandBrakeCLI.exe \
              server/assets/app/ccextractor/ccextractorwin.exe \
              server/npm/node_modules/ffprobe-static/bin/win32/ \
              server/npm/node_modules/ffprobe-static/bin/linux/ \
              server/npm/node_modules/nodegit/vendor/plink.exe \
              server/npm/node_modules/nodegit/vendor/pageant.exe

      - uses: actions/upload-artifact@v1
        with:
          name: tdarr-${{ matrix.os }}
          path: ../tdarr-${{ matrix.os }}